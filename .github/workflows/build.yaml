name: Run Speedlify

on:
  workflow_dispatch:
  schedule:
    - cron: "6 6 * * 1" # At 06:06 on Monday - https://crontab.guru/#6_6_*_*_1

jobs:
  run-tests:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout results
        id: checkout-results
        uses: actions/checkout@v4
        continue-on-error: true
        with:
          ref: refs/heads/results
          path: results

      - name: Checkout speedlify
        uses: actions/checkout@v4
        with:
          path: default

      - name: Install Node
        uses: actions/setup-node@v4
        with:
          cache: npm
          node-version-file: 'default/.nvmrc'
          cache-dependency-path: 'default/package-lock.json'

      - name: Copy existing results
        if: steps.checkout-results.outcome == 'success'
        run: cp -r results/. default/_data

      - name: Install npm dependencies
        run: npm ci
        working-directory: default

      - name: Run test-pages
        run: npm run test-pages
        working-directory: default

      - name: Upload results artifact
        uses: actions/upload-artifact@v4
        with:
          name: results
          path: default/_data/results

      - name: Upload results-last-runs artifact
        uses: actions/upload-artifact@v4
        with:
          name: results-last-runs.json
          path: default/_data/results-last-runs.json
      - name: Commit results to separate branch
        env:
          COMMIT_AUTHOR_EMAIL: 41898282+github-actions[bot]@users.noreply.github.com
          COMMIT_AUTHOR_NAME: github-actions[bot]
          COMMIT_MESSAGE: "chore: automatic build"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          mkdir -p results
          rm -rf results/*
          cp -r default/_data/results* results
          cd results
          git init
          git --no-pager branch --all --verbose
          git config --local user.name "$COMMIT_AUTHOR_NAME"
          git config --local user.email "$COMMIT_AUTHOR_EMAIL"
          (git show-branch results &>/dev/null) && (git switch results) || (git switch --create results)
          if [[ `git status --porcelain` ]]; then
            git add .
            git commit -m "$COMMIT_MESSAGE"
            git push -u origin results
          fi
